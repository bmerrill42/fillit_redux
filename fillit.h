/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   fillit.h                                           :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: agifford <marvin@42.fr>                    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2018/05/12 19:00:11 by agifford          #+#    #+#             */
/*   Updated: 2018/05/15 21:40:48 by agifford         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#ifndef FILLIT_H
# define FILLIT_H

# include "libft/libft.h"
# include <fcntl.h>
# include <stdlib.h>
# include <unistd.h>
# include <sys/types.h>
# include <sys/uio.h>
# define I {{'#', '.', '.', '.'}, {'#', '.', '.', '.',}, {'#', '.', '.', '.'}, {'#', '.', '.', '.'}}
# define O {{'#','#', '.', '.'}, {'#', '#', '.', '.'}, {'.', '.', '.', '.'}, {'.', '.', '.','.'}}
# define L {{'#', '.', '.', '.'}, {'#', '.', '.', '.'}, {'#', '#', '.', '.'}, {'.', '.', '.', '.'}}
# define J {{'.', '#', '.', '.'}, {'.', '#', '.', '.'}, {'#', '#', '.', '.'}, {'.', '.', '.', '.'}}
# define FLAT {{'#', '#', '#', '#'}, {'.', '.', '.', '.'}, {'.', '.', '.', '.'}, {'.', '.', '.', '.'}}
# define L_180 {{'#', '#', '.', '.'}, {'.', '#', '.', '.'}, {'.', '#', '.', '.'}, {'.', '.', '.', '.'}}
# define RIGHT_L {{'#', '#', '#', '.'}, {'#', '.', '.', '.'}, {'.', '.', '.', '.'}, {'.', '.', '.', '.'}}
# define LEFT_L {{'.', '.', '#', '.'}, {'#', '#', '#', '.'}, {'.', '.', '.', '.'}, {'.', '.', '.', '.'}}
# define J_180 {{'#', '#', '.', '.'}, {'#', '.', '.', '.'}, {'#', '.', '.', '.'}, {'.', '.', '.', '.'}}
# define RIGHT_J {{'#', '.', '.', '.'}, {'#', '#', '#', '.'}, {'.', '.', '.', '.'}, {'.', '.', '.', '.'}}
# define LEFT_J {{'#', '#', '#', '.'}, {'.', '.', '#', '.'}, {'.', '.', '.', '.'}, {'.', '.', '.', '.'}}
# define LEFT_S {{'#', '.', '.', '.'}, {'#', '#', '.', '.'}, {'.', '#', '.', '.'}, {'.', '.', '.', '.'}}
# define S {{'.', '#', '#', '.'}, {'#', '#', '.', '.'}, {'.', '.', '.', '.'}, {'.', '.', '.', '.'}}
# define RIGHT_Z {{'.', '#', '.', '.'}, {'#', '#', '.', '.'}, {'#', '.', '.', '.'}, {'.', '.', '.', '.'}}
# define Z {{'#', '#', '.', '.'}, {'.', '#', '#', '.'}, {'.', '.', '.', '.'}, {'.', '.', '.', '.'}}
# define T_180 {{'.', '#', '.', '.'}, {'#', '#', '#', '.'}, {'.', '.', '.', '.'}, {'.', '.', '.', '.'}}
# define LEFT_T {{'.', '#', '.', '.'}, {'#', '#', '.', '.'}, {'.', '#', '.', '.'}, {'.', '.', '.', '.'}}
# define RIGHT_T {{'#', '.', '.', '.'}, {'#', '#', '.', '.'}, {'#', '.', '.', '.'}, {'.', '.', '.', '.'}}
# define T {{'#', '#', '#', '.'}, {'.', '#', '.', '.'}, {'.', '.', '.', '.'}, {'.', '.', '.', '.'}}









typedef struct				piece
{
	unsigned char			width;
	unsigned char			height;

} piece;

#endif
