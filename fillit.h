/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   fillit.h                                           :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: agifford <marvin@42.fr>                    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2018/05/12 19:00:11 by agifford          #+#    #+#             */
/*   Updated: 2018/05/15 21:40:48 by agifford         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#ifndef FILLIT_H
# define FILLIT_H

# include "libft/libft.h"
# include <fcntl.h>
# include <stdlib.h>
# include <unistd.h>
# include <sys/types.h>
# include <sys/uio.h>
# define I char y0[4][4] = {{'#','.','.','.'},{'#','.','.','.',},{'#','.','.','.'},{'#','.'X0
# define X0 ,'.','.'}};
# define O char y1[4][4] = {{'#','#','.','.'},{'#','#','.','.'},{'.','.','.','.'},{'.','.',X1
# define X1 '.','.'}};
# define L char y2[4][4] = {{'#','.','.','.'},{'#','.','.','.'},{'#','#','.','.'},{'.','.',X2
# define X2 '.','.'}};
# define J char y3[4][4] = {{'.','#','.','.'},{'.','#','.','.'},{'#','#','.','.'},{'.','.',X3
# define X3 '.','.'}};
# define FLAT char y4[4][4] = {{'#','#','#','#'},{'.','.','.','.'},{'.','.','.','.'},{'.',X4
# define X4 '.','.','.'}};
# define L_180 char y5[4][4] = {{'#','#','.','.'},{'.','#','.','.'},{'.','#','.','.'},{'.',X5
# define X5 '.','.','.'}};
# define RIGHT_L char y6[4][4] = {{'#','#','#','.'},{'#','.','.','.'},{'.','.','.','.'},{X6
# define X6 '.','.','.','.'}};
# define LEFT_L char y7[4][4] = {{'.','.','#','.'},{'#','#','#','.'},{'.','.','.','.'},{'.'X7
# define X7 ,'.','.','.'}};
# define J_180 char y8[4][4] = {{'#','#','.','.'},{'#','.','.','.'},{'#','.','.','.'},{'.',X8
# define X8 '.','.','.'}};
# define RIGHT_J char y9[4][4] = {{'#','.','.','.'},{'#','#','#','.'},{'.','.','.','.'},{X9
# define X9 '.','.','.','.'}};
# define LEFT_J char y10[4][4] = {{'#','#','#','.'},{'.','.','#','.'},{'.','.','.','.'},{'.'X10
# define X10 ,'.','.','.'}};
# define LEFT_S char y11[4][4] = {{'#','.','.','.'},{'#','#','.','.'},{'.','#','.','.'},{'.'X11
# define X11 ,'.','.','.'}};
# define S char y12[4][4] = {{'.','#','#','.'},{'#','#','.','.'},{'.','.','.','.'},{'.','.',X12
# define X12 '.','.'}};
# define RIGHT_Z char y13[4][4] = {{'.','#','.','.'},{'#','#','.','.'},{'#','.','.','.'},{X13
# define X13 '.','.','.','.'}};
# define Z char y14[4][4] = {{'#','#','.','.'},{'.','#','#','.'},{'.','.','.','.'},{'.','.',X14
# define X14 '.','.'}};
# define T_180 char y15[4][4] = {{'.','#','.','.'},{'#','#','#','.'},{'.','.','.','.'},{'.',X15
# define X15 '.','.','.'}};
# define LEFT_T char y16[4][4] = {{'.','#','.','.'},{'#','#','.','.'},{'.','#','.','.'},{'.'X16
# define X16 ,'.','.','.'}};
# define RIGHT_T char y17[4][4] = {{'#','.','.','.'},{'#','#','.','.'},{'#','.','.','.'},{X17
# define X17 '.','.','.','.'}};
# define T char y18[4][4] = {{'#','#','#','.'},{'.','#','.','.'},{'.','.','.','.'},{'.','.',X18
# define X18 '.','.'}}
# define STACKARR I O L J FLAT L_180 RIGHT_L LEFT_L J_180 RIGHT_J LEFT_J LEFT_S S RIGHT_Z Z T_180 LEFT_T RIGHT_T T
# define HEAP(X)   list_add(g_valid_pieces, unstack_em(X))

# define VOID2ARR(X) (*(char (*)[4][4])X)

typedef struct		s_global_list {
	void		*piecearr;
	struct s_global_list	*next;
	struct s_global_list	*prev;
}			t_arr_list;

static t_arr_list				*g_valid_pieces;

#endif
